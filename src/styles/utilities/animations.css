/*
=================================================================
ANIMATIONS.CSS - Sistema de Animações
=================================================================
*/

@layer utilities {
    /*
    =================================================================
    CONFIGURAÇÃO DE ANIMAÇÕES
    =================================================================
    */
    
    /* Desabilita animações para usuários que preferem movimento reduzido */
    @media (prefers-reduced-motion: reduce) {
        *,
        *::before,
        *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        }
        
        /* Mantém animações essenciais para UX */
        .animate-pulse,
        .animate-spin {
        animation: none;
        }
    }
    
    /*
    =================================================================
    KEYFRAMES - Animações Base
    =================================================================
    */
    
    /* Fade In/Out */
    @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }
    
    @keyframes fadeOut {
        from { opacity: 1; }
        to { opacity: 0; }
    }
    
    /* Slide Animations */
    @keyframes slideUp {
        from {
        opacity: 0;
        transform: translateY(2rem);
        }
        to {
        opacity: 1;
        transform: translateY(0);
        }
    }
    
    @keyframes slideDown {
        from {
        opacity: 0;
        transform: translateY(-2rem);
        }
        to {
        opacity: 1;
        transform: translateY(0);
        }
    }
    
    @keyframes slideLeft {
        from {
        opacity: 0;
        transform: translateX(2rem);
        }
        to {
        opacity: 1;
        transform: translateX(0);
        }
    }
    
    @keyframes slideRight {
        from {
        opacity: 0;
        transform: translateX(-2rem);
        }
        to {
        opacity: 1;
        transform: translateX(0);
        }
    }
    
    /* Scale Animations */
    @keyframes scaleIn {
        from {
        opacity: 0;
        transform: scale(0.95);
        }
        to {
        opacity: 1;
        transform: scale(1);
        }
    }
    
    @keyframes scaleOut {
        from {
        opacity: 1;
        transform: scale(1);
        }
        to {
        opacity: 0;
        transform: scale(0.95);
        }
    }
    
    /* Bounce Effect */
    @keyframes bounceIn {
        0% {
        opacity: 0;
        transform: scale(0.3) translateY(-50px);
        }
        50% {
        opacity: 1;
        transform: scale(1.05) translateY(0);
        }
        70% {
        transform: scale(0.98);
        }
        100% {
        transform: scale(1);
        }
    }
    
    /* Loading Animations */
    @keyframes pulse {
        0%, 100% {
        opacity: 1;
        }
        50% {
        opacity: 0.5;
        }
    }
    
    @keyframes spin {
        from {
        transform: rotate(0deg);
        }
        to {
        transform: rotate(360deg);
        }
    }
    
    @keyframes heartbeat {
        0%, 100% {
        transform: scale(1);
        }
        50% {
        transform: scale(1.1);
        }
    }
    
    /* Skeleton Loading */
    @keyframes shimmer {
        0% {
        background-position: -200px 0;
        }
        100% {
        background-position: calc(200px + 100%) 0;
        }
    }
    
    /* Shake Effect (para erros) */
    @keyframes shake {
        0%, 100% {
        transform: translateX(0);
        }
        10%, 30%, 50%, 70%, 90% {
        transform: translateX(-10px);
        }
        20%, 40%, 60%, 80% {
        transform: translateX(10px);
        }
    }
    
    /*
    =================================================================
    CLASSES DE ANIMAÇÃO - Entrada de Elementos
    =================================================================
    */
    
    /* Fade Animations */
    .animate-fade-in {
        animation: fadeIn var(--duration-base) var(--ease-out) forwards;
    }
    
    .animate-fade-out {
        animation: fadeOut var(--duration-base) var(--ease-in) forwards;
    }
    
    /* Slide Animations */
    .animate-slide-up {
        animation: slideUp var(--duration-base) var(--ease-out) forwards;
    }
    
    .animate-slide-down {
        animation: slideDown var(--duration-base) var(--ease-out) forwards;
    }
    
    .animate-slide-left {
        animation: slideLeft var(--duration-base) var(--ease-out) forwards;
    }
    
    .animate-slide-right {
        animation: slideRight var(--duration-base) var(--ease-out) forwards;
    }
    
    /* Scale Animations */
    .animate-scale-in {
        animation: scaleIn var(--duration-fast) var(--ease-out) forwards;
    }
    
    .animate-scale-out {
        animation: scaleOut var(--duration-fast) var(--ease-in) forwards;
    }
    
    .animate-bounce-in {
        animation: bounceIn var(--duration-slow) var(--ease-out) forwards;
    }
    
    /*
    =================================================================
    LOADING STATES
    =================================================================
    */
    
    .animate-pulse {
        animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    }
    
    .animate-spin {
        animation: spin 1s linear infinite;
    }
    
    .animate-heartbeat {
        animation: heartbeat 1.5s ease-in-out infinite;
    }
    
    /* Skeleton Loading */
    .skeleton {
        background: linear-gradient(
        90deg,
        var(--bg-muted) 0%,
        var(--bg-subtle) 50%,
        var(--bg-muted) 100%
        );
        background-size: 200px 100%;
        animation: shimmer 1.5s infinite linear;
        border-radius: var(--radius);
    }
    
    /*
    =================================================================
    MICROINTERAÇÕES - Hover/Focus/Active
    =================================================================
    */
    
    /* Hover Effects */
    .hover-lift {
        transition: transform var(--duration-fast) var(--ease-out);
    }
    
    .hover-lift:hover {
        transform: translateY(-2px);
    }
    
    .hover-scale {
        transition: transform var(--duration-fast) var(--ease-out);
    }
    
    .hover-scale:hover {
        transform: scale(1.05);
    }
    
    .hover-glow {
        transition: box-shadow var(--duration-fast) var(--ease-out);
    }
    
    .hover-glow:hover {
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    }
    
    /* Click Effects */
    .click-scale {
        transition: transform var(--duration-fast) var(--ease-out);
    }
    
    .click-scale:active {
        transform: scale(0.98);
    }
    
    /*
    =================================================================
    FEEDBACK ANIMATIONS
    =================================================================
    */
    
    .animate-shake {
        animation: shake var(--duration-base) var(--ease-out);
    }
    
    /* Success Animation */
    .animate-success {
        animation: scaleIn var(--duration-fast) var(--ease-out),
                heartbeat 0.6s var(--ease-out) 0.3s;
    }
    
    /*
    =================================================================
    SCROLL-TRIGGERED ANIMATIONS (Preparação para JS)
    =================================================================
    */
    
    /* Estados iniciais para animações por scroll */
    .scroll-animate {
        opacity: 0;
        transform: translateY(2rem);
        transition: all var(--duration-base) var(--ease-out);
    }
    
    /* Estado ativo (acionado via JS) */
    .scroll-animate.in-view {
        opacity: 1;
        transform: translateY(0);
    }
    
    /* Variantes com delays */
    .scroll-animate-delay-1 {
        transition-delay: 0.1s;
    }
    
    .scroll-animate-delay-2 {
        transition-delay: 0.2s;
    }
    
    .scroll-animate-delay-3 {
        transition-delay: 0.3s;
    }
    
    /*
    =================================================================
    VARIAÇÕES DE VELOCIDADE
    =================================================================
    */
    
    /* Versões lentas */
    .animate-fade-in-slow {
        animation: fadeIn var(--duration-slow) var(--ease-out) forwards;
    }
    
    .animate-slide-up-slow {
        animation: slideUp var(--duration-slow) var(--ease-out) forwards;
    }
    
    /* Versões rápidas */
    .animate-fade-in-fast {
        animation: fadeIn var(--duration-fast) var(--ease-out) forwards;
    }
    
    .animate-slide-up-fast {
        animation: slideUp var(--duration-fast) var(--ease-out) forwards;
    }
    
    /*
    =================================================================
    ESTADO PAUSADO - Para controle via JS
    =================================================================
    */
    
    .animation-paused {
        animation-play-state: paused !important;
    }
    
    .animation-running {
        animation-play-state: running !important;
    }
    
    /*
    =================================================================
    TRANSIÇÕES GLOBAIS - Para elementos que mudam estado
    =================================================================
    */
    
    /* Transição suave padrão para mudanças de propriedade */
    .transition {
        transition: all var(--duration-base) var(--ease-base);
    }
    
    .transition-fast {
        transition: all var(--duration-fast) var(--ease-base);
    }
    
    .transition-slow {
        transition: all var(--duration-slow) var(--ease-base);
    }
    
    /* Transições específicas */
    .transition-colors {
        transition: color var(--duration-base) var(--ease-base),
                background-color var(--duration-base) var(--ease-base),
                border-color var(--duration-base) var(--ease-base);
    }
    
    .transition-transform {
        transition: transform var(--duration-base) var(--ease-base);
    }
    
    .transition-opacity {
        transition: opacity var(--duration-base) var(--ease-base);
    }
}